package com.wst.sweetfm.bolt;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import backtype.storm.coordination.BatchOutputCollector;
import backtype.storm.task.OutputCollector;
import backtype.storm.task.TopologyContext;
import backtype.storm.topology.OutputFieldsDeclarer;
import backtype.storm.topology.base.BaseBatchBolt;
import backtype.storm.tuple.Tuple;

public class MTSA_DRPC_SeriesAnalyzeBatchBolt extends BaseBatchBolt{
	BatchOutputCollector collector;
    HashMap<Integer,String> topicOutput = new HashMap<Integer,String>();
	@Override
	public void prepare(Map conf, TopologyContext context,
			BatchOutputCollector collector, Object id) {
		// TODO Auto-generated method stub
		this.collector = collector;
	}

	@Override
	public void execute(Tuple tuple) {
		// TODO Auto-generated method stub
		String subSeq = tuple.getString(1);
	   	String[] items = subSeq.split("#");
	    Integer tid = Integer.valueOf(items[0]);
	   	String topicStr = items[1];
	   	String[] topicItems = topicStr.split(">");
	   	double[] topicProbability = new double[topicItems.length];
	   	for(int i = 0; i < topicItems.length; i++){
	   	topicProbability[i] = Double.valueOf(topicItems[i]);
	}

	@Override
	public void finishBatch() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void declareOutputFields(OutputFieldsDeclarer declarer) {
		// TODO Auto-generated method stub
		
	}

}
