package storm.starter.bolt;

import java.util.HashMap;
import java.util.Queue;

import backtype.storm.topology.BasicOutputCollector;
import backtype.storm.topology.OutputFieldsDeclarer;
import backtype.storm.topology.base.BaseBasicBolt;
import backtype.storm.tuple.Fields;
import backtype.storm.tuple.Tuple;
import backtype.storm.tuple.Values;

public class MTSA_DRPC_InputBolt extends BaseBasicBolt{
	
	private static HashMap<Integer,HashMap<Integer,Double>> songMap = new HashMap<Integer,HashMap<Integer,Double>>(){
		{
		  put(0,new HashMap<Integer,Double>(){
			  {
			    put(0,0.5);
			    put(1,0.2);
			    put(2,0.3);
			  }
		   });
		  put(1,new HashMap<Integer,Double>(){
			  {
			    put(0,0.1);
			    put(1,0.4);
			    put(2,0.5);
			  }
		   });
		  put(2,new HashMap<Integer,Double>(){
			  {
			    put(0,0.15);
			    put(1,0.4);
			    put(2,0.45);
			  }
		   });
		  put(3,new HashMap<Integer,Double>(){
			  {
			    put(0,0.25);
			    put(1,0.4);
			    put(2,0.35);
			  }
		   });
		}
	};
	private Queue<String> queue;
	
	@Override
    public void execute(Tuple tuple, BasicOutputCollector collector) {
      String input = tuple.getString(1);
      collector.emit(new Values(tuple.getValue(0), input + "!"));
    }

    @Override
    public void declareOutputFields(OutputFieldsDeclarer declarer) {
      declarer.declare(new Fields("id", "result"));
    }
}
