/**
 * MTSA_TopicSpout.java
 * 版权所有(C) 2014 
 * 创建:wwssttt 2014-03-07 22:05:00
 * 描述:主题分发喷管，将序列按照主题序号展开并发射到下级处理单位
 */
package storm.starter.spout;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;

import backtype.storm.spout.SpoutOutputCollector;
import backtype.storm.task.TopologyContext;
import backtype.storm.topology.OutputFieldsDeclarer;
import backtype.storm.topology.base.BaseRichSpout;
import backtype.storm.tuple.Fields;

public class MTSA_TopicSpout extends BaseRichSpout{
	
	private SpoutOutputCollector collector;
	private static HashMap<Integer,HashMap<Integer,Double>> songMap = new HashMap<Integer,HashMap<Integer,Double>>(){
		{
		  put(0,new HashMap<Integer,Double>(){
			  {
			    put(0,0.5);
			    put(1,0.2);
			    put(2,0.3);
			  }
		   });
		  put(1,new HashMap<Integer,Double>(){
			  {
			    put(0,0.1);
			    put(1,0.4);
			    put(2,0.5);
			  }
		   });
		  put(2,new HashMap<Integer,Double>(){
			  {
			    put(0,0.15);
			    put(1,0.4);
			    put(2,0.45);
			  }
		   });
		  put(3,new HashMap<Integer,Double>(){
			  {
			    put(0,0.25);
			    put(1,0.4);
			    put(2,0.35);
			  }
		   });
		}
	};
	private Queue<String> queue = new LinkedList<String>();
	
	@Override
	public void open(Map conf, TopologyContext context,
			SpoutOutputCollector collector) {
		// TODO Auto-generated method stub
		this.collector = collector;
	}

	@Override
	public void nextTuple() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void declareOutputFields(OutputFieldsDeclarer declarer) {
		// TODO Auto-generated method stub
		declarer.declare(new Fields("topic"));
	}
	
	public MTSA_TopicSpout(String originalSeq){
		
	}

}
